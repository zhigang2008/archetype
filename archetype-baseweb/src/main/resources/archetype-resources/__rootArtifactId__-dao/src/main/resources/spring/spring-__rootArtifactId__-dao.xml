#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

     <!-- 应用连接池,生产环境建议用JNDI 连接池-->
 	  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">  
		<property name="driverClassName" value="${symbol_dollar}{${rootArtifactId}.db.driverclass}" />
		<property name="url" value="${symbol_dollar}{${rootArtifactId}.db.url}"/>
		<property name="username" value="${symbol_dollar}{${rootArtifactId}.db.username}" />
		<property name="password" value="${symbol_dollar}{${rootArtifactId}.db.password}" />
		<property name="testOnBorrow" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="initialSize" value="10" />
		<!-- <property name="maxActive" value="20" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="10" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="removeAbandonedTimeout" value="120" />
		<property name="removeAbandoned" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		 -->
	</bean> 
    <!-- JNDI 方式 的datasource, 建议生产环境使用容器的链接池
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	        <property name="jndiName">
	            <value>${symbol_dollar}{${rootArtifactId}.db.jndiname}</value>
	        </property>
   </bean>  
   -->

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-configuration.xml"/>
        <property name="typeAliasesPackage" value="${package}.model" />
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="${package}.dao" />
    </bean>
    
    <!-- begin log4jdbc 拦截器,提供执行sql日志, 在开发测试环境使用.生产环境请取消  -->    
	<bean id="log4jdbcInterceptor" class="com.htffund.etrade.sdk.common.log4jdbc.DataSourceSpyInterceptor" />
	<bean id="dataSourceLog4jdbcAutoProxyCreator"	class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>dataSource</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>log4jdbcInterceptor</value>
			</list>
		</property>
	</bean>
   <!-- end log4jdbc 拦截器  -->
   
</beans>
